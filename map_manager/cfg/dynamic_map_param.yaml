# change the following for drone-simulation exchange:
# depth_image_topic
# pose_topic
# odom_topic 
# depth_intrinsics
# depth_scale_factor
# conti_thresh: 0.2 for real world, 0 for simulation

localization_mode: 0 # 0: pose (default) 1: odom
# for drone
# depth_image_topic: /camera/depth/image_rect_raw
# pose_topic: /mavros/local_position/pose
# odom_topic: /vins_estimator/imu_propagate

# for simulation
depth_image_topic: /camera/depth/image_raw
pose_topic: /CERLAB/quadcopter/pose
odom_topic: /CERLAB/quadcopter/odom

# robot size
robot_size: [0.5, 0.5, 0.3]

# Camera Parameters
# depth_intrinsics: [386.22674560546875, 386.22674560546875, 317.3930969238281, 239.78431701660156] # fx,  fy, cx, cy realsense
depth_intrinsics: [554.254691191187, 554.254691191187, 320.5, 240.5] # fx,  fy, cx, cy simulation
# depth_scale_factor: 1000 # 1000 for Intel Realsense Camera
depth_scale_factor: 10 # simulation
depth_min_value: 0.5
depth_max_value: 5.0
depth_filter_margin: 2 # filter
depth_skip_pixel: 2 # filter
image_cols: 640
image_rows: 480
body_to_camera: [0.0,  0.0,  1.0,  0.09,
                -1.0,  0.0,  0.0,  0.0 ,   
                 0.0, -1.0,  0.0,  0.095,
                 0.0,  0.0,  0.0,  1.0]

# Raycasting
raycast_max_length: 5.0
p_hit: 0.70
p_miss: 0.35
p_min: 0.12
p_max: 0.97
p_occ: 0.80


# Map
map_resolution: 0.1
ground_height: -0.1 # m
map_size: [20, 20, 3 ] # meter. in x y z direction (reserved size)
local_update_range: [5, 5, 3]
local_bound_inflation: 3.0 # inflate local bound in meter
clean_local_map: false

# visualziation
local_map_size: [20, 20, 6] # meter. in x y z direction (only for visualization)
max_height_visualization: 2.5 # m
visualize_global_map: true
verbose: false



# dynamic map parameters

# map refinement
map_refinement_inflate_coefficient: 1.15 # ratio to inflate in dynamic region clean
# sizes limits for raw box from UV_detector
raw_box_width_limit_lower: 0.2 
raw_box_height_limit_lower: 1.0
raw_box_width_limit_upper: 1.3
raw_box_height_limit_upper: 2.0  
map_refine_floor: 0.2 # height of floor;should be higher than robot z_size/2

# dynamic region clean
pre_history_clean_size: 50 # size of history for dynamic region clean
hist_clean_skip: 1 # step size for picking from tracking history when clean dynamic region 
clean_extra_dist: 0.2 # clean extra distance on z direction
ground_thickness: 0.0 # thickness of ground 

# track & estimate velocty
timestep: 0.033 # system time step
overlap_threshold: 0.3 # overlap ratio for tracking metric
continuity_thresh: 0.8 # threshold of average cosine value in continuity filter
velocity_threshold: 0.4 # larger than this value will be considered as dynamic obstacle

# track and identify dynamic
fov_x_margin: 3
fov_y_margin: 0

# update non tracked states
# Kalman Filter 
e_p: 0.3
e_q: 0.002
e_r: 0.3

# identify dynamic objs
# first layer detect
avg_velocty_history_size: 10 # number of frames to calculate velocity
now_history_size: 20 # size of tracking history for all boxes
continuity_filter_history_size: 20 # size of tracking history for continuity filter; must <= now_history_size
continuity_filter_interval: 10 # interval for pairing in continuity filter
size_ratio_lower: 0.2 # 0.25/1.8 lower limit of width/height for region proposals
size_ratio_upper: 0.7 #1.3/1.8 upper limit of width/height for region proposals
# size limit for region proposals
fused_box_width_limit_lower: 0.4
fused_box_height_limit_lower: 1.3
fused_box_width_limit_upper: 1.2
fused_box_height_limit_upper: 2.0
lowest_point_limit: 0.2

# second layer detect
static_thresh: 4 # threshold for voting as static
dynamic_thresh: 16 # threshold for voting as dynamic
vote_history_size: 20 # size of voting history


# traj pred
n: 5 # num of paths in paths lib
t: 2 # time to evaluate when check collision in traj pred. (in case velocity is too small)
colli_check_end_dist: 3.0 # distance from the farthest point to starting point of collision check in traj pred
colli_check_start_dist: 1.0 # starting distance for collision check. No check within this distance
# Init states and transition matrix for Markov Chain
P_T:  [ 0.4637, 0.2812, 0.1182, 0.0729, 0.064, # markov state transform matrix
        0.3004, 0.4955, 0.3004, 0.1262, 0.0789,
        0.1369, 0.3258, 0.5373, 0.3258, 0.1369,
        0.0789, 0.1262, 0.3004, 0.4955, 0.3004,
        0.0640, 0.0729, 0.1182, 0.2812, 0.4637]
P_I:  [0.3162, 0.7499, 1, 0.7499, 0.3162] # markove init state matrix
